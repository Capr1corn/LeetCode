/*
You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.

The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so "a" is considered a different type of stone from "A".

Example 1:

Input: J = "aA", S = "aAAbbbb"
Output: 3
Example 2:

Input: J = "z", S = "ZZ"
Output: 0
Note:

S and J will consist of letters and have length at most 50.
The characters in J are distinct.
*/

思路：

用map统计，扫描一遍S即可。  或者遍历J 和S ，统计相同字母 的个数

代码1：

class Solution {
public:
    int numJewelsInStones(string J, string S) {
       int ret=0;
        map<char,int> mp;
        for(auto ch:S)mp[ch]++;
        for(int i=0;i<J.size();++i){
            ret+=mp[J[i]];
        }
        return ret;
    }
};


代码2：
class Solution {
public:
    int numJewelsInStones(string J, string S) {
        int count = 0;
        for(int i = 0; i < S.length(); i++) {
            for(int j = 0; j < J.length(); j++) {
                if(S[i] == J[j]) {
                    count++;
                }
            }
        }
        return count;
    }
};